/****************************************************************************
** Meta object code from reading C++ file 'inputcapture.mh'
**
** Created: Sun May 10 13:18:14 2009
**      by: The Qt Meta Object Compiler version 59 (Qt 4.4.3)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include "inputcapture.mh"
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'inputcapture.mh' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 59
#error "This file was generated using the moc from 4.4.3. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
static const uint qt_meta_data_InputCaptureWindow[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       2,   10, // methods
       0,    0, // properties
       0,    0, // enums/sets

 // slots: signature, parameters, type, tag, flags
      20,   19,   19,   19, 0x0a,
      38,   19,   19,   19, 0x0a,

       0        // eod
};

static const char qt_meta_stringdata_InputCaptureWindow[] = {
    "InputCaptureWindow\0\0assignMouseAxis()\0"
    "assignMouseButton()\0"
};

const QMetaObject InputCaptureWindow::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_InputCaptureWindow,
      qt_meta_data_InputCaptureWindow, 0 }
};

const QMetaObject *InputCaptureWindow::metaObject() const
{
    return &staticMetaObject;
}

void *InputCaptureWindow::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_InputCaptureWindow))
        return static_cast<void*>(const_cast< InputCaptureWindow*>(this));
    return QObject::qt_metacast(_clname);
}

int InputCaptureWindow::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        switch (_id) {
        case 0: assignMouseAxis(); break;
        case 1: assignMouseButton(); break;
        }
        _id -= 2;
    }
    return _id;
}
static const uint qt_meta_data_InputMouseCaptureWindow[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       2,   10, // methods
       0,    0, // properties
       0,    0, // enums/sets

 // slots: signature, parameters, type, tag, flags
      25,   24,   24,   24, 0x0a,
      39,   24,   24,   24, 0x0a,

       0        // eod
};

static const char qt_meta_stringdata_InputMouseCaptureWindow[] = {
    "InputMouseCaptureWindow\0\0assignAxisX()\0"
    "assignAxisY()\0"
};

const QMetaObject InputMouseCaptureWindow::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_InputMouseCaptureWindow,
      qt_meta_data_InputMouseCaptureWindow, 0 }
};

const QMetaObject *InputMouseCaptureWindow::metaObject() const
{
    return &staticMetaObject;
}

void *InputMouseCaptureWindow::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_InputMouseCaptureWindow))
        return static_cast<void*>(const_cast< InputMouseCaptureWindow*>(this));
    return QObject::qt_metacast(_clname);
}

int InputMouseCaptureWindow::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        switch (_id) {
        case 0: assignAxisX(); break;
        case 1: assignAxisY(); break;
        }
        _id -= 2;
    }
    return _id;
}
static const uint qt_meta_data_InputCalibrationWindow[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       1,   10, // methods
       0,    0, // properties
       0,    0, // enums/sets

 // slots: signature, parameters, type, tag, flags
      24,   23,   23,   23, 0x0a,

       0        // eod
};

static const char qt_meta_stringdata_InputCalibrationWindow[] = {
    "InputCalibrationWindow\0\0dismiss()\0"
};

const QMetaObject InputCalibrationWindow::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_InputCalibrationWindow,
      qt_meta_data_InputCalibrationWindow, 0 }
};

const QMetaObject *InputCalibrationWindow::metaObject() const
{
    return &staticMetaObject;
}

void *InputCalibrationWindow::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_InputCalibrationWindow))
        return static_cast<void*>(const_cast< InputCalibrationWindow*>(this));
    return QObject::qt_metacast(_clname);
}

int InputCalibrationWindow::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        switch (_id) {
        case 0: dismiss(); break;
        }
        _id -= 1;
    }
    return _id;
}
QT_END_MOC_NAMESPACE
